<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE why3session PUBLIC "-//Why3//proof session v5//EN"
"http://why3.lri.fr/why3session.dtd">
<why3session shape_version="6">
<prover id="0" name="CVC4" version="1.8" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="2" name="Alt-Ergo" version="2.4.2" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="3" name="Z3" version="4.11.0" timelimit="5" steplimit="0" memlimit="1000"/>
<prover id="4" name="Alt-Ergo" version="2.4.1" timelimit="1" steplimit="0" memlimit="1000"/>
<file format="whyml">
<path name=".."/><path name="convex_hull.mlw"/>
<theory name="Point" proved="true">
 <goal name="lowest_leftmost&#39;vc" expl="VC for lowest_leftmost" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.09" steps="18204"/></proof>
 <transf name="split_vc" proved="true" >
  <goal name="lowest_leftmost&#39;vc.0" expl="index in array bounds" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.00" steps="2"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="2"/></proof>
  </goal>
  <goal name="lowest_leftmost&#39;vc.1" expl="loop invariant init" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.00" steps="10"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="lowest_leftmost&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="5182"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="3"/></proof>
  </goal>
  <goal name="lowest_leftmost&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="5803"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="5"/></proof>
  </goal>
  <goal name="lowest_leftmost&#39;vc.4" expl="index in array bounds" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="5535"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="lowest_leftmost&#39;vc.5" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="lowest_leftmost&#39;vc.5.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="7481"/></proof>
   <proof prover="4"><result status="valid" time="0.00" steps="45"/></proof>
   </goal>
   <goal name="lowest_leftmost&#39;vc.5.1" expl="loop invariant preservation" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="7824"/></proof>
   <proof prover="4"><result status="valid" time="0.01" steps="53"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="lowest_leftmost&#39;vc.6" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="5606"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="15"/></proof>
  </goal>
  <goal name="lowest_leftmost&#39;vc.7" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="6766"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="19"/></proof>
  </goal>
  <goal name="lowest_leftmost&#39;vc.8" expl="loop invariant preservation" proved="true">
  <transf name="split_vc" proved="true" >
   <goal name="lowest_leftmost&#39;vc.8.0" expl="loop invariant preservation" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="5384"/></proof>
   <proof prover="4"><result status="valid" time="0.00" steps="13"/></proof>
   </goal>
   <goal name="lowest_leftmost&#39;vc.8.1" expl="loop invariant preservation" proved="true">
   <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="6642"/></proof>
   <proof prover="4"><result status="valid" time="0.01" steps="54"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="lowest_leftmost&#39;vc.9" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="5541"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="15"/></proof>
  </goal>
  <goal name="lowest_leftmost&#39;vc.10" expl="loop invariant preservation" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="5541"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="15"/></proof>
  </goal>
  <goal name="lowest_leftmost&#39;vc.11" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.02" steps="5224"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="7"/></proof>
  </goal>
  <goal name="lowest_leftmost&#39;vc.12" expl="postcondition" proved="true">
  <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="6085"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="lowest_leftmost&#39;vc.13" expl="out of loop bounds" proved="true">
  <proof prover="2" obsolete="true"><result status="valid" time="0.00" steps="2"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="2"/></proof>
  </goal>
 </transf>
 </goal>
</theory>
<theory name="CCW" proved="true">
 <goal name="knuth1" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="5584"/></proof>
 <proof prover="4"><result status="valid" time="0.01" steps="28"/></proof>
 </goal>
 <goal name="knuth2" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="5774"/></proof>
 <proof prover="4"><result status="valid" time="0.01" steps="31"/></proof>
 </goal>
 <goal name="knuth3" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="5874"/></proof>
 <proof prover="4"><result status="valid" time="0.01" steps="34"/></proof>
 </goal>
 <goal name="knuth4" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.03" steps="6957"/></proof>
 <proof prover="4"><result status="valid" time="0.31" steps="149"/></proof>
 </goal>
 <goal name="knuth5_aux" proved="true">
 <transf name="split_vc" proved="true" >
  <goal name="knuth5_aux.0" proved="true">
  <proof prover="0" timelimit="1" obsolete="true"><result status="valid" time="0.25" steps="40004"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="135"/></proof>
  </goal>
  <goal name="knuth5_aux.1" proved="true">
  <proof prover="0" timelimit="1" obsolete="true"><result status="valid" time="0.31" steps="47153"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="12"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="knuth5" proved="true">
 <proof prover="0" obsolete="true"><result status="valid" time="0.04" steps="8868"/></proof>
 <proof prover="4"><result status="valid" time="0.00" steps="15"/></proof>
 </goal>
 <goal name="check_all_on_left&#39;vc" expl="VC for check_all_on_left" proved="true">
 <proof prover="0" timelimit="1"><result status="valid" time="0.27" steps="29964"/></proof>
 <proof prover="3" timelimit="1"><result status="timeout" time="1.00"/></proof>
 <proof prover="4"><result status="timeout" time="1.00"/></proof>
 </goal>
</theory>
<theory name="ConvexHull">
 <goal name="check_is_convex_hull&#39;vc" expl="VC for check_is_convex_hull">
 <transf name="split_vc" >
  <goal name="check_is_convex_hull&#39;vc.0" expl="precondition" proved="true">
  <proof prover="0" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00" steps="642372"/></proof>
  <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
  <proof prover="4"><result status="valid" time="0.00" steps="8"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.1" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.2" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="13"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.3" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.4" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="11"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.5" expl="loop invariant init" proved="true">
  <proof prover="4"><result status="valid" time="0.02" steps="115"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.6" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="19"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.7" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="24"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.8" expl="precondition" proved="true">
  <proof prover="0" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00" steps="572829"/></proof>
  <proof prover="3" timelimit="10" memlimit="4000" obsolete="true"><result status="timeout" time="10.00"/></proof>
  <proof prover="4"><result status="valid" time="0.01" steps="79"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.9" expl="precondition" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="83"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.10" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="23"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.11" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="37"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.12" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.01" steps="38"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.13" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="24"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.14" expl="loop invariant preservation" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="24"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.15" expl="postcondition" proved="true">
  <proof prover="0" timelimit="1" obsolete="true"><result status="valid" time="0.42" steps="48764"/></proof>
  <proof prover="3" timelimit="1" obsolete="true"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="valid" time="0.03" steps="237"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.16" expl="assertion" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="17"/></proof>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.17" expl="postcondition">
  <proof prover="0" timelimit="1"><result status="timeout" time="1.00" steps="104586"/></proof>
  <proof prover="3" timelimit="1"><result status="timeout" time="1.00"/></proof>
  <proof prover="4"><result status="timeout" time="1.00"/></proof>
  <transf name="split_vc" >
   <goal name="check_is_convex_hull&#39;vc.17.0" expl="postcondition">
   <proof prover="0" timelimit="1"><undone/></proof>
   <proof prover="3" timelimit="1"><result status="timeout" time="1.00"/></proof>
   <proof prover="4"><result status="timeout" time="1.00"/></proof>
   </goal>
  </transf>
  </goal>
  <goal name="check_is_convex_hull&#39;vc.18" expl="out of loop bounds" proved="true">
  <proof prover="4"><result status="valid" time="0.00" steps="10"/></proof>
  </goal>
 </transf>
 </goal>
 <goal name="largest&#39;vc" expl="VC for largest">
 <proof prover="0" obsolete="true"><result status="unknown" time="0.09" steps="21117"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.53" steps="256807"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="unknown" time="0.01"/></proof>
 </goal>
 <goal name="jarvis_no_termination&#39;vc" expl="VC for jarvis_no_termination">
 <proof prover="0" obsolete="true"><result status="unknown" time="0.08" steps="21207"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.19" steps="193654"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="unknown" time="0.01"/></proof>
 </goal>
 <goal name="inverse&#39;vc" expl="VC for inverse">
 <proof prover="0" obsolete="true"><result status="unknown" time="0.09" steps="20420"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="0.57" steps="365394"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="timeout" time="5.00"/></proof>
 </goal>
 <goal name="jarvis&#39;vc" expl="VC for jarvis">
 <proof prover="0" obsolete="true"><result status="unknown" time="0.08" steps="21529"/></proof>
 <proof prover="3" obsolete="true"><result status="unknown" time="2.43" steps="239357"/></proof>
 <proof prover="4" timelimit="5" obsolete="true"><result status="unknown" time="0.01"/></proof>
 </goal>
 <goal name="order_doesnt_count&#39;vc" expl="VC for order_doesnt_count">
 </goal>
 <goal name="check_is_convex_hull_aux&#39;vc" expl="VC for check_is_convex_hull_aux">
 </goal>
</theory>
</file>
</why3session>
